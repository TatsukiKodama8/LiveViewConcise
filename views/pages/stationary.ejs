<!DOCTYPE html>
<html lang="ja">

<head>
    <%- include('../partials/head'); %>
    <link rel="stylesheet" href="css/style.css" type="text/css">
    <link rel="icon" type="image/x-icon" href="/img/myFavicon.jpg">
</head>

<body>
    <header>
        <%- include('../partials/header') %>
    </header>

    <!-- Display time for the slideshow -->
    <p>表示時間を選んでください。</p>
    <% 
        let displayTimeNum = 3;         // e.g., if it 3, display times are 10, 20, 30.
        let displayTimeInterval = 10;   /* sec */
        let displayTimeMin = 10;        /* sec */
        let displayTimeArray = [];
        for (let i=0; i <= displayTimeNum-1; i++) {
            displayTime = displayTimeMin + i*displayTimeInterval;
            displayTimeArray.push(displayTime);
        }
    %>
    <% for (let i=0; i<=displayTimeArray.length-1; i++) { %>  
    <label>
        <% if (i == 0) { %>
            <input type="radio" name="displayTime" checked/>
        <% } else { %>
            <input type="radio" name="displayTime"/>
        <% } %>
        <%= displayTimeArray[i] %>秒
    </label>
    <% } %>

    <%# =========== Category =========== %>
    <% let categoryNameArray = [
        '青果', '鮮魚・寿司', '惣菜', '酒・飲料', 'グロサリー', '衣料用品', 
        '生活消耗品', '台所用品', 'メンズビューティ', '季節雑貨', 'ホールセールパン',
        '加工肉', '冷凍食品', '洋日配', '和日配', '事務所', '決済エリア', '菓子', 
        'ハード', '米'
    ] %>
    <h3>カテゴリ一覧</h3>
    <%for (let i = 0; i < categoryNameArray.length; i++) {%>
    <label>
        <input type="checkbox" name="category-name" size = "10"/>
        <%= categoryNameArray[i] %>
    </label><br>
    <% } %>



    <%# =========== 店舗一覧 =========== %>
    <% let storeNameArray = [
        '北九州空港ﾊﾞｲﾊﾟｽ', '上津役', '和白', '上三緒', '長沼', '粕屋', 
        '福岡空港', '八千代', '水巻', '田川後藤寺', '稲築', '春日公園', 
        '池尻', 'アイランドシティ', '成田', '須恵', '今宿', '曰佐', '大野城まどかぴあ前', 
        '宮田', '筑紫野', '中間', '脇田', '原田1丁目', '戸畑小芝', '今泉2丁目', 
        '下曽根駅南', '藤崎駅前', '片縄9丁目', '塩原3丁目', '多の津', '比恵町', '志免南里', 
        '浪岡', '常盤', '芦屋山鹿', '習志野大久保', '戸畑一枝', '篠栗尾仲',
        '飯塚幸袋', '下関生野', '麦野', '宮若福丸', '八幡東田', '鞍手', 'つくば学園都市', 
        '前橋日吉町2丁目', '島原', 'IoTラボ', '街北'
    ] %>
    <%# display selected storename %>
    <h3>店舗一覧</h3>
    <form>
        <label>
            <input id="buttonAllSelect" type="button" name="select" value="全選択"/>
        </label>
        <label>
            <input id="buttonAllCancellation" type="button" name="select" value="全解除"/>
        </label>
    </form>
    <p id="displayStoreName"></p><%# Selcted store names are displayed here. %>
    <form action="#" method="post">
        <select id="selectStoreName" name="store-name" multiple size="10">
            <!-- <option value="" disabled selected style="display:none;">選択してください</option>  -->
            <% for (let i=0; i<storeNameArray.length; i++) { %>
                <option><%= storeNameArray[i] %></option>
            <% } %>
        </select>
    </form>

    <script>
    // multiple select 
    document.addEventListener('DOMContentLoaded', function () {                   // function is executed after reading HTML file
        const selectElement = document.getElementById('selectStoreName');   // obtain <select>element with ID being 'selectStoreName' and store it in selectElement
        selectElement.addEventListener('mousedown', function (e) {          // add event-listener mousedown to selectElemnt
            e.preventDefault();                     // cancel the mousedown event 
            const option = e.target;                // e.target represents
            if (option.tagName === 'OPTION') {      // check whether e.target is option element or not
                option.selected = !option.selected; // when click the option element, ... true => false / false => true

                // Log the selected values to the console
                const selectedOptions = Array.from(selectElement.options)
                                            .filter(option => option.selected)
                                            .map(option => option.value);
                document.getElementById('displayStoreName').textContent = `${(selectedOptions)}`;
            }
        });
    });    

    // selection and cancellation button
    document.addEventListener('DOMContentLoaded', function() {
            const selectElement = document.getElementById('selectStoreName');
            const btnas = document.getElementById('buttonAllSelect');
            const btnac = document.getElementById('buttonAllCancellation');

            // Function to log selected options
            function logSelectedOptions() {
                const selectedOptions = Array.from(selectElement.options)
                    .filter(option => option.selected)
                    .map(option => option.value);
                //console.log(selectedOptions);
                document.getElementById('displayStoreName').textContent = `${(selectedOptions)}`;
            }

            // all selection
            btnas.addEventListener('click', function() {
                Array.from(selectElement.options).forEach(option => {
                    option.selected = true;
                });
                logSelectedOptions(); 
            });

            // all cancellation 
            btnac.addEventListener('click', function() {
                Array.from(selectElement.options).forEach(option => {
                    option.selected = false;
                });
                logSelectedOptions(); 
            });

            
            logSelectedOptions();
        });

    </script>
    



    <p><a href="index">Exit</a></p>
  
        
</body>

</html>